name: is-nextjestjs-swc-comat

on:
  workflow_dispatch: # * Treated like a scheduled run
  schedule:
    - cron: '15 */6 * * *'

env:
  # * Selectively enable debugger verbose output in the pipeline
  # ? See also: https://www.npmjs.com/package/debug#wildcards
  DEBUG: '*'
  NODE_CURRENT_VERSION: 22.x
  NODE_OLDER_VERSIONS: '"18.x", "20.x"'

jobs:
  metadata:
    name: 'gather-metadata'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      node-matrix: ${{ steps.set-matrix.outputs.node-matrix }}
    steps:
      - name: Report mode statuses
        run: |
          if [ -n "$DEBUG" ]; then
            echo "IS-NEXTJESTJS-SWC-COMAT IS RUNNING IN DEBUG MODE ($DEBUG)"
          else
            echo '(is-nextjestjs-swc-comat is not running in debug mode)'
          fi

      - name: Gather metadata
        id: set-matrix
        run: |
          echo "node-matrix={\"node\":[$NODE_OLDER_VERSIONS, \"$NODE_CURRENT_VERSION\"]}" >> $GITHUB_OUTPUT
          ! [ -z "$DEBUG" ] && echo "set-output name=node-matrix::{\"node\":[$NODE_OLDER_VERSIONS, \"$NODE_CURRENT_VERSION\"]}" || true

  check-compat:
    runs-on: ubuntu-latest
    needs: metadata
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.metadata.outputs.node-matrix) }}
    steps:
      # GitHub Actions artifacts cannot handle filenames with certain characters
      - name: Reify metadata
        id: reified-metadata
        env:
          NODE_VERSION: ${{ matrix.node }}
        run: >
          node -p
          '`node-version-sanitized=${process.env.NODE_VERSION.replaceAll(
          /[":<>|*?\\\/=,\s'"'"']/g,"-")}`' >> "$GITHUB_OUTPUT"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # See: https://github.com/actions/setup-node/issues/214#issuecomment-810829250
      - name: Reconfigure git to use HTTP authentication
        run: >
          git config --global url."https://github.com/".insteadOf
          ssh://git@github.com/

      - name: Use node ${{ matrix.node }}
        uses: actions/setup-node@v4.0.4

      - name: Cache npm
        uses: actions/cache@v4
        id: cache-npm
        with:
          key:
            npm-node-${{ matrix.node }}-${{ runner.os }}-${{
            hashFiles('**/package-lock.json') }}
          path: ~/.npm
          restore-keys: npm-node-${{ matrix.node }}-${{ runner.os }}-

      # Turns out tee eats exit codes... ... sigh
      # Also, we use npm install over npm ci for more accurate test results
      - name: Install CI dependencies
        run: |
          mkfifo '#pipe.ignore'
          tee --append /tmp/output.txt < '#pipe.ignore' &
          npm install --force > '#pipe.ignore' 2>&1
          rm '#pipe.ignore'

      - name: Build externals (we're only interested in util.js)
        run: npm run build:externals

      # We need to install Next.js's peer dependencies by hand because it is
      # possible that Vercel devs publish broken package.json peerDependencies
      - name: Run davidmytton's example repo tests
        # https://github.com/Xunnamius/next-test-api-route-handler/discussions/983#
        run: |
          git clone https://github.com/Xunnamius/ntarh-nextjestjs-swc-compat-test
          cd ntarh-nextjestjs-swc-compat-test

          mkfifo '#pipe.ignore'
          tee --append /tmp/output.txt < '#pipe.ignore' &

          npm install --force > '#pipe.ignore' 2>&1

          extra_installs=$(node -e '(async () => console.log((await require("../external-scripts/bin/util.js").getNextjsReactPeerDependencies("next@latest")).join(" ")))()')

          if [[ -n "$extra_installs" ]]; then
            npm install --force --no-save $(echo $extra_installs) > '#pipe.ignore' 2>&1
          fi

          npm list next > '#pipe.ignore' 2>&1
          npm list next-test-api-route-handler > '#pipe.ignore' 2>&1
          npm list react > '#pipe.ignore' 2>&1
          npm list react-dom > '#pipe.ignore' 2>&1

          npx jest

          rm '#pipe.ignore'

      - name: Upload output artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name:
            output-node-${{
            steps.reified-metadata.outputs.node-version-sanitized }}-${{
            github.sha }}
          path: /tmp/output.txt
          if-no-files-found: error
          retention-days: 1
